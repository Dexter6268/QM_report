I want a plan for a report that is concise and focused.\n\n<Report topic>\nThe topic of the report is:\nOverview of Model Context Protocol (MCP), an Anthropic‚Äëbacked open standard for integrating external context and tools with LLMs. Give an architectural overview for developers, tell me about interesting MCP servers, and compare to google Agent2Agent (A2A) protocol.\n</Report topic>\n\n<Report organization>\nThe report should follow this organization: \nUse this structure to create a report on the user-provided topic:\n\n1. Introduction (no research needed)\n   - Brief overview of the topic area\n\n2. Main Body Sections:\n   - Each section should focus on a sub-topic of the user-provided topic\n\n3. Conclusion\n   - Aim for 1 structural element (either a list of table) that distills the main body sections \n   - Provide a concise summary of the report\n</Report organization>\n\n<Context>\nHere is context to use to plan the sections of the report: \nSearch results: \n\n\n\n--- SOURCE 1: What is Model Context Protocol? (MCP) Architecture Overview ---\nURL: https://medium.com/@tahirbalarabe2/what-is-model-context-protocol-mcp-architecture-overview-c75f20ba4498\n\nSUMMARY:\nIf you‚Äôre building AI agents, you‚Äôve likely heard of MCP, or the Model Context Protocol. *   MCP is an open-source standard designed to facilitate connections between AI agents and various data sources, such as databases, APIs, and local files. The MCP host is the application using the AI agent (e.g., a chat app), the client initiates requests, and the server provides access to the required data and tools. **How does an AI agent (using MCP) determine which tool to use to answer a user‚Äôs question?** *   MCP provides a standardized way to connect AI agents to data sources, simplifying the process of building robust and knowledgeable agents. Mcp For Ai Agent Image 19: Model Context Protocol (MCP) in AI\n\nFULL CONTENT:\nPublished Time: 2025-03-04T20:05:41.249Z\n\nüîóWhat is Model Context Protocol? (MCP) Architecture Overview | by Tahir | Medium\n\n===============\n\n[Sitemap](https://medium.com/sitemap/sitemap.xml)\n\n[Open in app](https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fc75f20ba4498&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderUser&source=post_page---top_nav_layout_nav-----------------------------------------)\n\nSign up\n\n[Sign in](https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Fmedium.com%2F%40tahirbalarabe2%2Fwhat-is-model-context-protocol-mcp-architecture-overview-c75f20ba4498&source=post_page---top_nav_layout_nav-----------------------global_nav------------------)\n\n[](https://medium.com/?source=post_page---top_nav_layout_nav-----------------------------------------)\n\n[Write](https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---top_nav_layout_nav-----------------------new_post_topnav------------------)\n\n[](https://medium.com/search?source=post_page---top_nav_layout_nav-----------------------------------------)\n\nSign up\n\n[Sign in](https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Fmedium.com%2F%40tahirbalarabe2%2Fwhat-is-model-context-protocol-mcp-architecture-overview-c75f20ba4498&source=post_page---top_nav_layout_nav-----------------------global_nav------------------)\n\n![Image 1](https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png)\n\n1\n\n¬∑\nTop highlight\n\nüîóWhat is Model Context Protocol? (MCP) Architecture Overview\n=============================================================\n\n[![Image 2: Tahir](https://miro.medium.com/v2/resize:fill:64:64/1*-ggDcHgIQSbhwkpWwqLaEw.png)](https://medium.com/@tahirbalarabe2?source=post_page---byline--c75f20ba4498---------------------------------------)\n\n[Tahir](https://medium.com/@tahirbalarabe2?source=post_page---byline--c75f20ba4498---------------------------------------)\n\nFollow\n\n6 min read\n\n¬∑\n\nMar 4, 2025\n\n[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2Fc75f20ba4498&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40tahirbalarabe2%2Fwhat-is-model-context-protocol-mcp-architecture-overview-c75f20ba4498&user=Tahir&userId=250d7dd8fa2c&source=---header_actions--c75f20ba4498---------------------clap_footer------------------)\n\n72\n\n1\n\n[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc75f20ba4498&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40tahirbalarabe2%2Fwhat-is-model-context-protocol-mcp-architecture-overview-c75f20ba4498&source=---header_actions--c75f20ba4498---------------------bookmark_footer------------------)\n\n[Listen](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2Fplans%3Fdimension%3Dpost_audio_button%26postId%3Dc75f20ba4498&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40tahirbalarabe2%2Fwhat-is-model-context-protocol-mcp-architecture-overview-c75f20ba4498&source=---header_actions--c75f20ba4498---------------------post_audio_button------------------)\n\nShare\n\n![Image 3](https://miro.medium.com/v2/resize:fit:700/1*eMJOfxPK5OZ-wwNLFoc9Jw.png)\n\nM CP is an open-source standard designed to facilitate connections between AI agents and various data sources, such as databases, APIs, and local files. It enables agents to access and utilize external information to enhance their performance and provide more informed responses.\n\nIf you‚Äôre building AI agents, you‚Äôve likely heard of MCP, or the Model Context Protocol. It‚Äôs a new open standard designed to connect agents to data sources like databases or APIs. At first glance, it might seem like just another piece of infrastructure, but it‚Äôs worth understanding because it solves a problem that‚Äôs becoming increasingly common: how to make agents more useful by giving them access to the tools they need.\n\n![Image 4](https://miro.medium.com/v2/resize:fit:700/1*MfI2XLk63rQye0Sh-hAUag.png)\n\nMCP is built around three main components: the host, the client, and the server. The host is the application that uses the agent ‚Äî it could be a chat app, a code assistant in your IDE, or something else entirely. The host includes the client, which is the interface between the host and the server. The server, on the other hand, is where the tools live. It connects to databases, APIs, or even local files, and it‚Äôs responsible for executing the tasks the agent needs to perform.\n\n![Image 5](https://miro.medium.com/v2/resize:fit:700/1*lynjZkqm4_XETe6VgJGByw.png)\n\nHere‚Äôs how it works in practice. Let‚Äôs say you‚Äôre using a chat app powered by MCP. You ask a question like, ‚ÄúWhat‚Äôs the weather in New York?‚Äù or ‚ÄúHow many customers do I have?‚Äù The host sends this question to the server, which identifies the tools needed to answer it. The host then connects to a large language model (LLM), sends the question along with the available tools, and the LLM decides which tools to use. Once the host knows which tools are needed, it calls the appropriate servers to execute the task ‚Äî whether that‚Äôs querying a database, calling an API, or running a piece of code. The server sends the results back to the LLM, which generates the final answer for the user.\n\nWhat makes MCP interesting is its flexibility. It doesn‚Äôt matter what kind of database or API you‚Äôre using ‚Äî relational, NoSQL, REST, GraphQL, or even local files. MCP abstracts away the specifics, so you can focus on building agents that do useful things. This is especially valuable if you‚Äôre building something like a code assistant, where the agent needs to interact with a wide variety of data sources.\n\nOne of the key insights behind MCP is that agents are only as useful as the tools they can access. If your agent can‚Äôt connect to the data it needs, it‚Äôs not going to be very helpful. MCP solves this by providing a standardized way to connect agents to tools, making it easier to build agents that can do more.\n\n![Image 6](https://miro.medium.com/v2/resize:fit:700/1*eM1NYRUu42AbJ_yg_UljRg.png)\n\nIf you‚Äôre building agents, you should take a closer look at MCP. It‚Äôs still early days, but it has the potential to become a key piece of infrastructure for anyone working in this space. Even if you‚Äôre not building agents yourself, your clients might be, and understanding how MCP works will give you a leg up.\n\nThe best way to get started is to experiment with it. Try building a simple agent that uses MCP to connect to a database or API. You‚Äôll quickly see how it simplifies the process of giving your agent access to the tools it needs. And once you‚Äôve done that, you‚Äôll start to see all the other ways you can use it.\n\nMCP is one of those ideas that seems obvious in retrospect. Of course agents need a standard way to connect to tools. But like most good ideas, it wasn‚Äôt obvious until someone built it. Now that it exists, it‚Äôs hard to imagine building agents without it.\n\nFurther Reading::\n=================\n\n[ü§ñChatGPT for Vulnerability Detection by Tahir Balarabe](https://medium.com/@tahirbalarabe2/chatgpt-for-vulnerability-detection-by-tahir-balarabe-affaf19bb0ad)\n\n[_üöÄDeepSeek R1 Explained: Chain of Thought, Reinforcement Learning, and Model Distillation_](https://medium.com/@tahirbalarabe2/deepseek-r1-explained-chain-of-thought-reinforcement-learning-and-model-distillation-0eb165d928c9)\n\n[What are AI Agents?](https://medium.com/@tahirbalarabe2/what-are-ai-agents-f06ef775e78f)\n\n[Stable Diffusion Deepfakes: Creation and Detection](https://medium.com/@tahirbalarabe2/stable-diffusion-deepfakes-creation-and-detection-15103f99f55d)\n\n[The Difference Between AI Assistants and AI Agents (And Why It Matters)](https://medium.com/@tahirbalarabe2/stable-diffusion-deepfakes-creation-and-detection-15103f99f55d)\n\n[‚öõÔ∏èMicrosoft‚Äôs Majorana 1: A Scalable Quantum Computing Breakthrough](https://medium.com/@tahirbalarabe2/%EF%B8%8Fmicrosofts-majorana-1-a-scalable-quantum-computing-breakthrough-149555912022)\n\n[ü§ñDeepSeek R1 API Interaction with Python](https://medium.com/@tahirbalarabe2/deepseek-r1-api-interaction-with-python-4fd4217b3b6f)\n\nFrequently Asked Questions About Model Context Protocol (MCP)\n=============================================================\n\n**What is Model Context Protocol (MCP)?**\n\n*   MCP is an open-source standard designed to facilitate connections between AI agents and various data sources, such as databases, APIs, and local files. It enables agents to access and utilize external information to enhance their performance and provide more informed responses.\n\n**What are the primary components of the MCP architecture?**\n\n*   The MCP architecture consists of three main components: the MCP host, the MCP client (often integrated within the host), and the MCP server(s). The MCP host is the application using the AI agent (e.g., a chat app), the client initiates requests, and the server provides access to the required data and tools. They communicate using the MCP protocol.\n\n**How does the MCP protocol enable communication between the components?**\n\n*   The MCP protocol acts as a transport layer, enabling communication between the MCP host/client and the MCP server(s). It defines the standard for exchanging requests and responses, ensuring seamless interaction between the agent and the data sources.\n\n**How does an AI agent (using MCP) determine which tool to use to answer a user‚Äôs question?**\n\n*   When a user poses a question to the MCP host (e.g., a chat app), the host consults with the MCP server(s) to identify available tools relevant to the query. The host then sends the user‚Äôs question and the list of available tools to a large language model (LLM). The LLM analyzes the information and determines which tool(s) are best suited to answer the question.\n\n**What types of data sources can an MCP server connect to?**\n\n*   An MCP server can connect to a wide variety of data sources, including relational and NoSQL databases, APIs (regardless of their standard), local files, and even code. This versatility allows agents to access virtually any type of information they might need.\n\n**Can an MCP host connect to multiple MCP servers?**\n\n*   Yes, an MCP host can connect to multiple MCP servers. This allows the agent to access a wider range of tools and data sources, improving its ability to answer complex queries.\n\n**Can you provide a practical example of how MCP works in a chat application?**\n\n*   Imagine a chat application where you ask, ‚ÄúWhat‚Äôs the weather in London?‚Äù. The MCP host (the chat app) identifies available weather tools from its connected MCP server(s). It sends your question, along with the available tools, to an LLM. The LLM determines that a weather API tool is required. The MCP host then calls the relevant MCP server to use the weather API, retrieves the weather data for London, sends it back to the LLM, which generates the final answer for you in the chat application.\n\n**Why should developers consider using MCP?**\n\n*   MCP provides a standardized way to connect AI agents to data sources, simplifying the process of building robust and knowledgeable agents. By using MCP, developers can easily integrate data access into their agents, enabling them to answer a wider range of questions and perform more complex tasks. Even if you aren‚Äôt building agents, your clients might be, and this is a good way to enable their agent capabilities.\n\n[Mcp For Ai Agent](https://medium.com/tag/mcp-for-ai-agent?source=post_page-----c75f20ba4498---------------------------------------)\n\n[Mcp Protocol](https://medium.com/tag/mcp-protocol?source=post_page-----c75f20ba4498---------------------------------------)\n\n[Mcp Vs Other Ai Protocol](https://medium.com/tag/mcp-vs-other-ai-protocol?source=post_page-----c75f20ba4498---------------------------------------)\n\n[Mcp Server](https://medium.com/tag/mcp-server?source=post_page-----c75f20ba4498---------------------------------------)\n\n[Mcp Client](https://medium.com/tag/mcp-client?source=post_page-----c75f20ba4498---------------------------------------)\n\n[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2Fc75f20ba4498&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40tahirbalarabe2%2Fwhat-is-model-context-protocol-mcp-architecture-overview-c75f20ba4498&user=Tahir&userId=250d7dd8fa2c&source=---footer_actions--c75f20ba4498---------------------clap_footer------------------)\n\n72\n\n[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2Fc75f20ba4498&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40tahirbalarabe2%2Fwhat-is-model-context-protocol-mcp-architecture-overview-c75f20ba4498&user=Tahir&userId=250d7dd8fa2c&source=---footer_actions--c75f20ba4498---------------------clap_footer------------------)\n\n72\n\n1\n\n[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc75f20ba4498&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40tahirbalarabe2%2Fwhat-is-model-context-protocol-mcp-architecture-overview-c75f20ba4498&source=---footer_actions--c75f20ba4498---------------------bookmark_footer------------------)\n\n[![Image 7: Tahir](https://miro.medium.com/v2/resize:fill:96:96/1*-ggDcHgIQSbhwkpWwqLaEw.png)](https://medium.com/@tahirbalarabe2?source=post_page---post_author_info--c75f20ba4498---------------------------------------)\n\n[![Image 8: Tahir](https://miro.medium.com/v2/resize:fill:128:128/1*-ggDcHgIQSbhwkpWwqLaEw.png)](https://medium.com/@tahirbalarabe2?source=post_page---post_author_info--c75f20ba4498---------------------------------------)\n\nFollow\n\n[Written by Tahir ----------------](https://medium.com/@tahirbalarabe2?source=post_page---post_author_info--c75f20ba4498---------------------------------------)\n\n[335 followers](https://medium.com/@tahirbalarabe2/followers?source=post_page---post_author_info--c75f20ba4498---------------------------------------)\n\n¬∑[46 following](https://medium.com/@tahirbalarabe2/following?source=post_page---post_author_info--c75f20ba4498---------------------------------------)\n\nFollow\n\nResponses (1)\n-------------\n\n[](https://policy.medium.com/medium-rules-30e5502c4eb4?source=post_page---post_responses--c75f20ba4498---------------------------------------)\n\n![Image 9](https://miro.medium.com/v2/resize:fill:32:32/1*dmbNkD5D-u45r44go_cf0g.png)\n\nWrite a response\n\n[What are your thoughts?](https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40tahirbalarabe2%2Fwhat-is-model-context-protocol-mcp-architecture-overview-c75f20ba4498&source=---post_responses--c75f20ba4498---------------------respond_sidebar------------------)\n\nCancel\n\nRespond\n\n[![Image 10: Nimeet Shah](https://miro.medium.com/v2/resize:fill:32:32/1*5svJrSfJWFSDfAqo4UKHNA.jpeg)](https://medium.com/@nimeetshah?source=post_page---post_responses--c75f20ba4498----0-----------------------------------)\n\n[Nimeet Shah](https://medium.com/@nimeetshah?source=post_page---post_responses--c75f20ba4498----0-----------------------------------)\n\n[6 days ago](https://nimeetshah.medium.com/you-could-consider-that-the-server-is-responding-with-the-documentation-that-the-llm-can-read-and-793eeb7a5476?source=post_page---post_responses--c75f20ba4498----0-----------------------------------)\n\nidentifies the tools needed to answer it\n\nYou could consider that the server is responding with the documentation that the LLM can read and understand. This documentation is sent to the LLM along with the user query.\n\n[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2F793eeb7a5476&operation=register&redirect=https%3A%2F%2Fnimeetshah.medium.com%2Fyou-could-consider-that-the-server-is-responding-with-the-documentation-that-the-llm-can-read-and-793eeb7a5476&user=Nimeet+Shah&userId=27b004dc3ad8&source=---post_responses--793eeb7a5476----0-----------------respond_sidebar------------------)\n\nReply\n\nMore from Tahir\n---------------\n\n![Image 11: ‚öôÔ∏èLangChain vs. LangGraph: A Comparative Analysis](https://miro.medium.com/v2/resize:fit:679/1*7gy6H05LxrmH_A_GFEyuoQ.png)\n\n[![Image 12: Tahir](https://miro.medium.com/v2/resize:fill:20:20/1*-ggDcHgIQSbhwkpWwqLaEw.png)](https://medium.com/@tahirbalarabe2?source=post_page---author_recirc--c75f20ba4498----0---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n[Tahir](https://medium.com/@tahirbalarabe2?source=post_page---author_recirc--c75f20ba4498----0---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n[‚öôÔ∏èLangChain vs. LangGraph: A Comparative Analysis ------------------------------------------------- ### ‚ÄúDiscover the key differences between LangChain and LangGraph for building LLM applications. Learn which framework to use for sequential‚Ä¶](https://medium.com/@tahirbalarabe2/%EF%B8%8Flangchain-vs-langgraph-a-comparative-analysis-ce7749a80d9c?source=post_page---author_recirc--c75f20ba4498----0---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\nFeb 14\n\n[134 2](https://medium.com/@tahirbalarabe2/%EF%B8%8Flangchain-vs-langgraph-a-comparative-analysis-ce7749a80d9c?source=post_page---author_recirc--c75f20ba4498----0---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fce7749a80d9c&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40tahirbalarabe2%2F%25EF%25B8%258Flangchain-vs-langgraph-a-comparative-analysis-ce7749a80d9c&source=---author_recirc--c75f20ba4498----0-----------------bookmark_preview----ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n![Image 13: The Security Risks of Model Context Protocol (MCP)](https://miro.medium.com/v2/resize:fit:679/1*yuVzMhCJyDENbyhwAsrkwA.png)\n\n[![Image 14: Tahir](https://miro.medium.com/v2/resize:fill:20:20/1*-ggDcHgIQSbhwkpWwqLaEw.png)](https://medium.com/@tahirbalarabe2?source=post_page---author_recirc--c75f20ba4498----1---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n[Tahir](https://medium.com/@tahirbalarabe2?source=post_page---author_recirc--c75f20ba4498----1---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n[üíªWhat is Ollama: Running Large Language Models Locally ------------------------------------------------------- ### Discover Ollama, the locally deployed AI model runner that lets you run large language models offline. Learn how to customize models, use‚Ä¶](https://medium.com/@tahirbalarabe2/what-is-ollama-running-large-language-models-locally-e917ca40defe?source=post_page---author_recirc--c75f20ba4498----1---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\nMar 24\n\n[25](https://medium.com/@tahirbalarabe2/what-is-ollama-running-large-language-models-locally-e917ca40defe?source=post_page---author_recirc--c75f20ba4498----1---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe917ca40defe&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40tahirbalarabe2%2Fwhat-is-ollama-running-large-language-models-locally-e917ca40defe&source=---author_recirc--c75f20ba4498----1-----------------bookmark_preview----ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n![Image 15: Model Context Protocol (MCP) vs. APIs: The New Standard for AI Integration](https://miro.medium.com/v2/resize:fit:679/1*l5G-l3nfy3bl3hAv6v6EBQ.png)\n\n[![Image 16: Tahir](https://miro.medium.com/v2/resize:fill:20:20/1*-ggDcHgIQSbhwkpWwqLaEw.png)](https://medium.com/@tahirbalarabe2?source=post_page---author_recirc--c75f20ba4498----2---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n[Tahir](https://medium.com/@tahirbalarabe2?source=post_page---author_recirc--c75f20ba4498----2---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n[Model Context Protocol (MCP) vs. APIs: The New Standard for AI Integration -------------------------------------------------------------------------- ### Discover how MCP (Model Context Protocol) improves AI integration vs. traditional APIs. Learn key differences, benefits, and why MCP is the](https://medium.com/@tahirbalarabe2/model-context-protocol-mcp-vs-apis-the-new-standard-for-ai-integration-d6b9a7665ea7?source=post_page---author_recirc--c75f20ba4498----2---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\nMay 17\n\n[7](https://medium.com/@tahirbalarabe2/model-context-protocol-mcp-vs-apis-the-new-standard-for-ai-integration-d6b9a7665ea7?source=post_page---author_recirc--c75f20ba4498----2---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd6b9a7665ea7&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40tahirbalarabe2%2Fmodel-context-protocol-mcp-vs-apis-the-new-standard-for-ai-integration-d6b9a7665ea7&source=---author_recirc--c75f20ba4498----2-----------------bookmark_preview----ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n![Image 17: üöÄDeepSeek R1 Explained: Chain of Thought, Reinforcement Learning, and Model Distillation](https://miro.medium.com/v2/resize:fit:679/1*PHW1Jh3rhA7N0eq85KiXSg.png)\n\n[![Image 18: Tahir](https://miro.medium.com/v2/resize:fill:20:20/1*-ggDcHgIQSbhwkpWwqLaEw.png)](https://medium.com/@tahirbalarabe2?source=post_page---author_recirc--c75f20ba4498----3---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n[Tahir](https://medium.com/@tahirbalarabe2?source=post_page---author_recirc--c75f20ba4498----3---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n[üöÄDeepSeek R1 Explained: Chain of Thought, Reinforcement Learning, and Model Distillation ----------------------------------------------------------------------------------------- ### DeepSeek R1 introduces Chain of Thought and Reinforcement Learning to AI, making it more transparent, self-improving, and efficient. Here‚Äôs](https://medium.com/@tahirbalarabe2/deepseek-r1-explained-chain-of-thought-reinforcement-learning-and-model-distillation-0eb165d928c9?source=post_page---author_recirc--c75f20ba4498----3---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\nJan 30\n\n[97 3](https://medium.com/@tahirbalarabe2/deepseek-r1-explained-chain-of-thought-reinforcement-learning-and-model-distillation-0eb165d928c9?source=post_page---author_recirc--c75f20ba4498----3---------------------ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F0eb165d928c9&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40tahirbalarabe2%2Fdeepseek-r1-explained-chain-of-thought-reinforcement-learning-and-model-distillation-0eb165d928c9&source=---author_recirc--c75f20ba4498----3-----------------bookmark_preview----ee65fa54_8516_4d2c_9337_10adcdcf8bd5--------------)\n\n[See all from Tahir](https://medium.com/@tahirbalarabe2?source=post_page---author_recirc--c75f20ba4498---------------------------------------)\n\nRecommended from Medium\n-----------------------\n\n![Image 19: Model Context Protocol (MCP) in AI](https://miro.medium.com/v2/resize:fit:679/1*dvlStbw29rzI_sDUtCP0Ew.png)\n\n[![Image 20: Stackademic](https://miro.medium.com/v2/resize:fill:20:20/1*U-kjsW7IZUobnoy1gAp1UQ.png)](https://medium.com/stackademic?source=post_page---read_next_recirc--c75f20ba4498----0---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\nIn\n\n[Stackademic](https://medium.com/stackademic?source=post_page---read_next_recirc--c75f20ba4498----0---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\nby\n\n[BavalpreetSinghh](https://medium.com/@bavalpreetsinghh?source=post_page---read_next_recirc--c75f20ba4498----0---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\n[Model Context Protocol (MCP) in AI ---------------------------------- ### Introduction to MCP](https://medium.com/stackademic/model-context-protocol-mcp-in-ai-9858b5ecd9ce?source=post_page---read_next_recirc--c75f20ba4498----0---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\nMar 13\n\n[465 2](https://medium.com/stackademic/model-context-protocol-mcp-in-ai-9858b5ecd9ce?source=post_page---read_next_recirc--c75f20ba4498----0---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\n[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9858b5ecd9ce&operation=register&redirect=https%3A%2F%2Fblog.stackademic.com%2Fmodel-context-protocol-mcp-in-ai-9858b5ecd9ce&source=---read_next_recirc--c75f20ba4498----0-----------------bookmark_preview----e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\n![Image 21: Building a Multi-Agent AI System with LangGraph and LangSmith](https://miro.medium.com/v2/resize:fit:679/1*BX5lOdJVWoW4CfS6F6YEAA.png)\n\n[![Image 22: Level Up Coding](https://miro.medium.com/v2/resize:fill:20:20/1*5D9oYBd58pyjMkV_5-zXXQ.jpeg)](https://medium.com/gitconnected?source=post_page---read_next_recirc--c75f20ba4498----1---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\nIn\n\n[Level Up Coding](https://medium.com/gitconnected?source=post_page---read_next_recirc--c75f20ba4498----1---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\nby\n\n[Fareed Khan](https://medium.com/@fareedkhandev?source=post_page---read_next_recirc--c75f20ba4498----1---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\n[Building a Multi-Agent AI System with LangGraph and LangSmith ------------------------------------------------------------- ### A step-by-step guide to creating smarter AI with sub-agents](https://medium.com/gitconnected/building-a-multi-agent-ai-system-with-langgraph-and-langsmith-6cb70487cd81?source=post_page---read_next_recirc--c75f20ba4498----1---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\nJun 1\n\n[1K 16](https://medium.com/gitconnected/building-a-multi-agent-ai-system-with-langgraph-and-langsmith-6cb70487cd81?source=post_page---read_next_recirc--c75f20ba4498----1---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\n[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6cb70487cd81&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fbuilding-a-multi-agent-ai-system-with-langgraph-and-langsmith-6cb70487cd81&source=---read_next_recirc--c75f20ba4498----1-----------------bookmark_preview----e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\n![Image 23: What is MCP? A Comprehensive Guide to Building Advanced AI Agents Beyond Traditional APIs.](https://miro.medium.com/v2/resize:fit:679/1*f3ZHpGCfqsBFQS2oaZlcCg.png)\n\n[![Image 24: Towards AI](https://miro.medium.com/v2/resize:fill:20:20/1*JyIThO-cLjlChQLb6kSlVQ.png)](https://medium.com/towards-artificial-intelligence?source=post_page---read_next_recirc--c75f20ba4498----0---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\nIn\n\n[Towards AI](https://medium.com/towards-artificial-intelligence?source=post_page---read_next_recirc--c75f20ba4498----0---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\nby\n\n[Shreyansh Jain](https://medium.com/@shreyanshjain05?source=post_page---read_next_recirc--c75f20ba4498----0---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\n[What is MCP? A Comprehensive Guide to Building Advanced AI Agents Beyond Traditional APIs. ------------------------------------------------------------------------------------------ ### Learn how the MCP enhances AI integration by granting AI systems greater autonomy and access to real-time data.](https://medium.com/towards-artificial-intelligence/what-is-mcp-a-comprehensive-guide-to-building-advanced-ai-agents-beyond-traditional-apis-c110abbeabb2?source=post_page---read_next_recirc--c75f20ba4498----0---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\n6d ago\n\n[254 3](https://medium.com/towards-artificial-intelligence/what-is-mcp-a-comprehensive-guide-to-building-advanced-ai-agents-beyond-traditional-apis-c110abbeabb2?source=post_page---read_next_recirc--c75f20ba4498----0---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\n[](https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc110abbeabb2&operation=register&redirect=https%3A%2F%2Fpub.towardsai.net%2Fwhat-is-mcp-a-comprehensive-guide-to-building-advanced-ai-agents-beyond-traditional-apis-c110abbeabb2&source=---read_next_recirc--c75f20ba4498----0-----------------bookmark_preview----e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\n![Image 25: If I started learning AI Agents & no-code Automation in 2025, here‚Äôs what I‚Äôd do to move 10x faster](https://miro.medium.com/v2/resize:fit:679/1*-_HDy2-rWXNTrX336sqAsw.png)\n\n[![Image 26: AI Advances](https://miro.medium.com/v2/resize:fill:20:20/1*R8zEd59FDf0l8Re94ImV0Q.png)](https://medium.com/ai-advances?source=post_page---read_next_recirc--c75f20ba4498----1---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\nIn\n\n[AI Advances](https://medium.com/ai-advances?source=post_page---read_next_recirc--c75f20ba4498----1---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\nby\n\n[Kris Ograbek](https://medium.com/@kris-ograbek?source=post_page---read_next_recirc--c75f20ba4498----1---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\n[If I started learning AI Agents & no-code Automation in 2025, here‚Äôs what I‚Äôd do to move 10x faster --------------------------------------------------------------------------------------------------- ### The ultimate, no-fluff learning guide for non-tech beginners.](https://medium.com/ai-advances/if-i-started-learning-ai-agents-no-code-automation-in-2025-heres-what-i-d-do-to-move-10x-faster-4ead3aecb80f?source=post_page---read_next_recirc--c75f20ba4498----1---------------------e63a67fc_1f89_449c_be5a_4a84968b196b--------------)\n\n5d ago\n\n[932 23](https://medium.com/ai-advances/if-i-started-learning-ai-agents-no-code-automat\n\n--------------------------------------------------------------------------------\n\n\n--- SOURCE 2: Model Context Protocol (MCP) an overview - Philschmid ---\nURL: https://www.philschmid.de/mcp-introduction\n\nSUMMARY:\nThe Model Context Protocol (MCP) is an open standard introduced by Anthropic with the goal to standardize how AI applications (chatbots, IDE assistants, or custom agents) connect with external tools, data sources, and systems. Tool creators build N MCP servers (one for each system), while application developers build M MCP clients (one for each AI application). *   **Clients:** Live within the Host application and manage the connection to one specific MCP server. *   **Servers:** External programs that expose Tools, Resources and Prompts via standard API to the AI model via the client. 2.   **Discovery:** Clients requests what capabilities (Tools, Resources, Prompts) the server offers. @mcp.tool() mcp_tools = await session.list_tools()\n\nFULL CONTENT:\nModel Context Protocol (MCP) an overview\n\n===============\n\n[![Image 1: logo](https://www.philschmid.de/_next/image?url=%2Fstatic%2Flogo.png&w=48&q=75)Philschmid](https://www.philschmid.de/)\n\nSearch‚åòk\n\n[Blog](https://www.philschmid.de/)[Projects](https://www.philschmid.de/projects)[Newsletter](https://www.philschmid.de/cloud-attention)[About Me](https://www.philschmid.de/philipp-schmid)Toggle Menu\n\nModel Context Protocol (MCP) an overview\n========================================\n\nApril 3, 2025 9 minute read\n\nThe [Model Context Protocol](https://modelcontextprotocol.io/introduction) (MCP) is an open standard [introduced by Anthropic](https://www.anthropic.com/news/model-context-protocol) with the goal to standardize how AI applications (chatbots, IDE assistants, or custom agents) connect with external tools, data sources, and systems.\n\n![Image 2: api](https://www.philschmid.de/static/blog/mcp-introduction/api.png)\n\nThink of it like USB for AI integrations. Before standards like USB, connecting peripherals required a mess of different ports and custom drivers. Similarly, integrating AI applications with external tools and systems is/was an "M√óN problem".\n\nIf you have M different AI applications (Chat, RAG 1, custom agents, etc.) and N different tools/systems (GitHub, Slack, Asana, databases, etc.), you might need to build M√óN different integrations. This leads to duplicated effort across teams, inconsistent implementations.\n\nMCP aims to simplify this by providing a common API and transforming this into an "M+N problem". Tool creators build N MCP servers (one for each system), while application developers build M MCP clients (one for each AI application). MCP defines a client-server architecture where:\n\n*   **Hosts:** Applications the user interacts with (e.g., Claude Desktop, an IDE like Cursor, a custom agent).\n*   **Clients:** Live within the Host application and manage the connection to one specific MCP server. Maintain a 1:1 to connection.\n*   **Servers:** External programs that expose Tools, Resources and Prompts via standard API to the AI model via the client.\n\nThe current components of MCP servers include:\n\n1.   **Tools (Model-controlled):** These are functions (tools) that LLMs can call to perform specific actions, e.g. weather API, basically function calling\n2.   **Resources (Application-controlled):** These are data sources that LLMs can access, similar to GET endpoints in a REST API. Resources provide data without performing significant computation, no side effects. Part of the context/request\n3.   **Prompts (User-controlled):** These are pre-defined templates to use tools or resources in the most optimal way. Selected before running inference\n\n![Image 3: overview](https://www.philschmid.de/static/blog/mcp-introduction/overview.png)\n\n[](https://www.philschmid.de/mcp-introduction#how-does-mcp-work)How does MCP work?\n----------------------------------------------------------------------------------\n\nMCP operates on the client-server model described earlier. Here‚Äôs a simplified flow:\n\n![Image 4: architecture](https://www.philschmid.de/static/blog/mcp-introduction/architecture.png)\n\n1.   **Initialization:** When a Host application starts it creates N MCP Clients, which exchange information about capabilities and protocol versions via a handshake.\n2.   **Discovery:** Clients requests what capabilities (Tools, Resources, Prompts) the server offers. The Server responds with a list and descriptions.\n3.   **Context Provision:** The Host application can now make resources and prompts available to the user or parses the tools into a LLM compatible format, e.g. JSON Function calling\n4.   **Invocation:** If the LLM determines it needs to use a Tool (e.g., based on the user\'s request like "What are the open issues in the \'X\' repo?"), the Host directs the Client to send an invocation request to the appropriate Server.\n5.   **Execution:** The Server receives the request (e.g., fetch_github_issues with repo \'X\'), executes the underlying logic (calls the GitHub API), and gets the result.\n6.   **Response:** The Server sends the result back to the Client.\n7.   **Completion:** The Client relays the result to the Host, which incorporates it into the LLM\'s context, allowing the LLM to generate a final response for the user based on the fresh, external information.\n\n### [](https://www.philschmid.de/mcp-introduction#mcp-servers)MCP servers\n\nMCP Servers are the bridge/API between the MCP world and the specific functionality of an external system (an API, a database, local files, etc.). They are essentially wrappers that expose these external capabilities according to the MCP specification.\n\nServers can be built in various languages (Python, TypeScript, Java, Rust, etc.) as long as they can communicate over the supported transports. Servers communicate with clients primarily via two methods:\n\n*   **stdio (Standard Input/Output):** Used when Client and Server run on the same machines. This is simple and effective for local integrations (e.g., accessing local files or running a local script).\n*   **HTTP via SSE (Server-Sent Events):** The Client connects to the Server via HTTP. After an initial setup, the Server can push messages (events) to the Client over a persistent connection using the SSE standard.\n\nExample of how to build an MCP server with Python and [FastMCP](https://github.com/jlowin/fastmcp/tree/main):\n\n```\nfrom fastmcp import FastMCP\n \n# Create an MCP server\nmcp = FastMCP("Demo")\n \n# Add a tool, will be converted into JSON spec for function calling\n@mcp.tool()\ndef add(a: int, b: int) -> int:\n    """Add two numbers"""\n    return a + b\n \n# Add a data resource, e.g. displayed on new chats\n@mcp.resource("greeting://{name}")\ndef get_greeting(name: str) -> str:\n    """Get a personalized greeting"""\n    return f"Hello, {name}!"\n \n# Specific prompt templates for better use\n@mcp.prompt()\ndef review_code(code: str) -> str:\n    return f"Please review this code:\\n\\n{code}"\n```\n\nList of pre-build and community build MCP servers:\n\n*   [https://github.com/punkpeye/awesome-mcp-servers](https://github.com/punkpeye/awesome-mcp-servers)\n*   [https://github.com/modelcontextprotocol/servers](https://github.com/modelcontextprotocol/servers)\n*   [https://mcp.composio.dev/](https://mcp.composio.dev/)\n\n### [](https://www.philschmid.de/mcp-introduction#mcp-clients)MCP Clients\n\nMCP Clients are part of Host applications (the IDE, chatbot, etc.) that manage the communication with a specific MCP Server.\n\n*   **Role:** Handle connection management, capability discovery, request forwarding, and response handling according to the MCP spec.\n*   **Examples of Hosts/Clients:**\n    *   UI Apps: Claude Desktop, Microsoft Copilot Studio, LibreChat, Claude Code\n    *   IDEs: Cursor, Windsurf, Continue, Zed, Cline\n    *   Custom Agents (Python/TypeScript):\n        *   Firebase Genkit\n        *   LangGraph\n        *   OpenAI agents sdk\n        *   ‚Ä¶.\n\nExample of how to build an MCP client with Python and mcp.\n\n```\nfrom mcp import ClientSession, StdioServerParameters, types\nfrom mcp.client.stdio import stdio_client\n \n# Commands for running/connecting to MCP Server\nserver_params = StdioServerParameters(\n    command="python",  # Executable\n    args=["example_server.py"],  # Optional command line arguments\n    env=None,  # Optional environment variables\n)\n \nasync with stdio_client(server_params) as (read, write):\n    async with ClientSession(\n        read, write, sampling_callback=handle_sampling_message\n    ) as session:\n        # Initialize the connection\n        await session.initialize()\n \n        # List available prompts\n        prompts = await session.list_prompts()\n \n        # Get a prompt\n        prompt = await session.get_prompt(\n            "example-prompt", arguments={"arg1": "value"}\n        )\n \n        # List available resources\n        resources = await session.list_resources()\n \n        # List available tools\n        tools = await session.list_tools()\n \n        # Read a resource\n        content, mime_type = await session.read_resource("file://some/path")\n \n        # Call a tool\n        result = await session.call_tool("tool-name", arguments={"arg1": "value"})\n```\n\n[](https://www.philschmid.de/mcp-introduction#why-is-there-so-much-hype-did-mcp-win)Why is there so much hype? Did MCP win?\n---------------------------------------------------------------------------------------------------------------------------\n\nWhile Anthropic announced MCP in late 2024, its momentum significantly accelerated in early 2025. This isn\'t just random hype; several factors converged:\n\n*   **"AI-Native"** while older standards like OpenAPI, GraphQL, or SOAP exist for API interaction, MCP was designed specifically for the needs of modern AI agents. MCP refines patterns seen in agent development:\n    *   Tools (Model-controlled): Actions the AI decides to take.\n    *   Resources (Application-controlled): Context provided to the AI.\n    *   Prompts (User-controlled): Specific user-invoked interactions.\n\n*   **"Open Standard" with a Big Backer:** Any "open standard‚Äù should have a spec, and [MCP has a VERY good spec](https://spec.modelcontextprotocol.io/specification/2024-11-05/). The spec alone defeats a lot of contenders, who do not provide such detailed specs.\n*   **Built on Proven Foundations:** Instead of re-inventing everything from scratch, Anthropic adapted from Language Server Protocol (LSP), e.g. [JSON-RPC 2.0](https://www.jsonrpc.org/)\n*   **Strong Initial Ecosystem & Dogfooding:** MCP didn\'t launch as just a spec. Anthropic "dogfooded" it extensively and released it with a comprehensive initial set:\n    *   Client: Claude Desktop.\n    *   Servers: Numerous reference implementations (filesystem, git, Slack, etc.).\n    *   Tooling: MCP Inspector for testing, great documentation\n    *   SDKs: Python and TypeScript libraries, now Java, Kotlin C#\n\n*   **Network Effects:** The open nature fostered a community. Tools like Cursor and Windsurf integrated MCP. Companies like Composio provided pre-built servers for hundreds of integrations. OpenAI announced support for MCP. Developers built thousands of community MCP servers (GitHub, Slack, databases, Docker, etc.).\n\n[](https://www.philschmid.de/mcp-introduction#practical-example-with-gemini-and-python-usdk)Practical Example with Gemini and Python uSDK\n-----------------------------------------------------------------------------------------------------------------------------------------\n\n```\nfrom typing import List\nfrom google import genai\nfrom google.genai import types\nfrom mcp import ClientSession, StdioServerParameters\nfrom mcp.client.stdio import stdio_client\nimport os\n \nclient = genai.Client(api_key=os.getenv("GEMINI_API_KEY"))\nmodel = "gemini-2.0-flash"\n \n# Create server parameters for stdio connection\nserver_params = StdioServerParamet...esting to see how they transform the agentic ecosystem.\n\n### MCP Webinar\n\nWe‚Äôre hosting first ever MCP webinar where we will discuss MCP security, Tool Authentication, Best practices for building and deploying MCP agents, and answer your questions. So, please join us on July 17, 2025. It\'ll be fun.\n\n[Register Now](https://tally.so/r/mKA2D8)\n\n![Image 6](https://framerusercontent.com/images/wx0T1wkfVAzFc1t91fqP2ZCBcEg.png)\n\n![Image 7](https://framerusercontent.com/images/wx0T1wkfVAzFc1t91fqP2ZCBcEg.png)\n\n#### Recommended Blogs\n\n[CMS CMS CMS 6/30/25 #### Build your personal voice AI agent to control all your apps in Shrijal](https://composio.dev/blog/build-your-personal-voice-ai-agent-to-control-all-your-apps)\n\n[CMS 6/25/25 #### How to effectively use prompts, resources, and tools in MCP in Harsh](https://composio.dev/blog/how-to-effectively-use-prompts-resources-and-tools-in-mcp)\n\n[CMS 6/18/25 #### How to add 100+ MCP servers to VS Code in minutes in Harsh](https://composio.dev/blog/how-to-add-100-mcp-servers-to-vs-code-in-minutes)\n\n[CMS CMS CMS 6/17/25 #### OpenAI o3-pro vs Claude 4 Opus vs Gemini 2.5 Pro in Shrijal](https://composio.dev/blog/openai-o3-pro-vs-claude-4-opus-vs-gemini-2-5-pro)\n\nStay updated.\n\n[Join discord](https://dub.composio.dev/discord)\n\nproduct\n\n[mcp](https://mcp.composio.dev/)\n\n[pricing](https://composio.dev/pricing)\n\n[startups](https://composio.dev/startups)\n\n[enterprise](https://composio.dev/enterprise)\n\n[agent auth](https://composio.dev/agentauth)\n\nresources\n\n[docs](https://docs.composio.dev/getting-started/welcome)\n\n[blog](https://composio.dev/blog)\n\n[cookbooks](https://composio.dev/cookbook)\n\nCOMPANY\n\n[Careers](https://composio.notion.site/)\n\n[trust](https://trust.composio.dev/)\n\n[Contact](mailto:support@composio.dev)\n\n[](https://x.com/composiohq)[](https://www.linkedin.com/company/composiohq/)[](https://github.com/composiohq/composio/)[![Image 8](https://framerusercontent.com/images/dE3Zwp6hB8UjPX1CrHugvKKKXrY.png)](https://dub.composio.dev/discord)[](https://www.youtube.com/@Composio)\n\n¬© Composio 2025\n\n[Terms](https://composio.dev/terms)\n\n[Privacy Policy](https://composio.dev/privacy)\n\n![Image 9](https://framerusercontent.com/images/a9LS0ZYTo58X3YN1bgMz1gx4kE.webp)\n\n\n--------------------------------------------------------------------------------\n\n\n--- SOURCE 9: Agent2Agent vs. MCP: Choosing the Right Protocol for Your AI Agents ---\nURL: https://medium.com/@mustaphaliaichi/agent2agent-vs-mcp-choosing-the-right-protocol-for-your-ai-agents-84785ddf517f\n\nSUMMARY:\nAgent2Agent (A2A) vs.\u200b\u200b MCP is like a tool workshop: It tells agents what tools (APIs) are available and how to use them, but doesn\'t address\n\nFULL CONTENT:\nSign up\n\n[Sign in](/m/signin?operation=login&redirect=https%3A%2F%2Fmedium.com%2F%40mustaphaliaichi%2Fagent2agent-vs-mcp-choosing-the-right-protocol-for-your-ai-agents-84785ddf517f&source=post_page---top_nav_layout_nav-----------------------global_nav------------------)\n\nSign up\n\n[Sign in](/m/signin?operation=login&redirect=https%3A%2F%2Fmedium.com%2F%40mustaphaliaichi%2Fagent2agent-vs-mcp-choosing-the-right-protocol-for-your-ai-agents-84785ddf517f&source=post_page---top_nav_layout_nav-----------------------global_nav------------------)\n\n![](https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png)\n\nMember-only story\n\n# Agent2Agent vs. MCP: Choosing the Right Protocol for Your AI Agents\n\n![Mustaphaliaichi](https://miro.medium.com/v2/da:true/resize:fill:64:64/0*atS46bcyCNkr3bG2)\n\n--\n\nShare\n\n![]()\n\nAs artificial intelligence systems proliferate, the need for seamless collaboration between autonomous agents has become a major challenge. Google‚Äôs new Agent2Agent (A2A) protocol aims to solve this by enabling AI agents-regardless of vendor, language, or deployment environment-to securely discover, communicate, and collaborate across platforms[1](https://wandb.ai/byyoung3/Generative-AI/reports/How-the-Agent2Agent-A2A-protocol-enables-seamless-AI-agent-collaboration--VmlldzoxMjQwMjkwNg)[2](https://developers.googleblog.com/en/a2a-a-new-era-of-agent-interoperability/)[4](https://github.com/google/A2A). But how does A2A compare to the widely adopted Model Context Protocol (MCP), and what does this mean for the future of multi-agent AI systems?\n\n# What Is the Agent2Agent (A2A) Protocol?\n\nThe Agent2Agent (A2A) protocol is an open, vendor-neutral standard designed to allow autonomous AI agents to find each other, communicate securely, and orchestrate their actions-no matter who built them or where they run[1](https://wandb.ai/byyoung3/Generative-AI/reports/How-the-Agent2Agent-A2A-protocol-enables-seamless-AI-agent-collaboration--VmlldzoxMjQwMjkwNg)[2](https://developers.googleblog.com/en/a2a-a-new-era-of-agent-interoperability/)[3](https://www.descope.com/learn/post/a2a)[5](https://research.aimultiple.com/agent2agent/). A2A is built on familiar web technologies such as HTTP, JSON-RPC, and Server-Sent Events (SSE), making it easy to implement and integrate with existing systems[1](https://wandb.ai/byyoung3/Generative-AI/reports/How-the-Agent2Agent-A2A-protocol-enables-seamless-AI-agent-collaboration--VmlldzoxMjQwMjkwNg)[5](https://research.aimultiple.com/agent2agent/)[6](https://dev.to/composiodev/mcp-vs-agent2agent-everything-you-need-to-know-52ck).\n\n**Key Features of A2A:**\n\n--\n\n--\n\n![Mustaphaliaichi](https://miro.medium.com/v2/resize:fill:96:96/0*atS46bcyCNkr3bG2)\n![Mustaphaliaichi](https://miro.medium.com/v2/resize:fill:128:128/0*atS46bcyCNkr3bG2)\n\n## Written by Mustaphaliaichi\n\nAI enthusiast who learned the hard way that depth beats breadth in the rapidly evolving world of AI agents.\n\n## No responses yet\n\nHelp\n\nStatus\n\nAbout\n\nCareers\n\nPress\n\nBlog\n\nPrivacy\n\nRules\n\nTerms\n\nText to speech\n\n--------------------------------------------------------------------------------\n\n\n--- SOURCE 10: MCP vs. A2A: AI Protocols Compared - Oxylabs ---\nURL: https://oxylabs.io/blog/mcp-vs-a2a\n\nSUMMARY:\nLearn how MCP compares to A2A, how each protocol works, and what their features are. Understand each protocol through comprehensive MCP and\n\nFULL CONTENT:\nEurope\n\nNorth America\n\nSouth America\n\nAsia\n\nAfrica\n\nOceania\n\nSee all locations\n\nNetwork status\n\nCareers\n\nhello@oxylabs.io\n\nEnglish\n\n‰∏≠Êñá\n\nLog in\n\n![](https://oxylabs-web.cdn.prismic.io/oxylabs-web/ZxiTgoF3NbkBX4SP_icon-left.svg)\n![](https://oxylabs-web.cdn.prismic.io/oxylabs-web/ZxiTgoF3NbkBX4SP_icon-left.svg)\n\n# MCP vs. A2A: AI Protocols Compared\n\n![](/_next/image?url=https%3A%2F%2Fimages.prismic.io%2Foxylabs-web%2FaEGBCLh8WN-LVptr_igor-omilaev-ZyhBFrNkDR4-unsplash.jpg%3Fauto%3Dformat%2Ccompress&w=3840&q=75)\n![vytenis kaubre avatar](/_next/image?url=https%3A%2F%2Fimages.prismic.io%2Foxylabs-web%2FZpArAB5LeNNTxDX4_4f38d4bd-d761-4feb-b525-27dd91f0c34e_DSC-4452.png%3Fauto%3Dformat%2Ccompress&w=1200&q=75)\n\nVytenis Kaubrƒó\n\nLast updated on\n\n2025-06-05\n\n4 min read\n\nForget everything you know about AI integration chaos. Model Context Protocol (MCP) and Agent2Agent (A2A) have recently rewritten the rules ‚Äì no more custom code for every third-party tool and no more agent coordination headaches. These two protocols address AI\'s connectivity crisis from different angles, and together, they\'re saving significant development time.\n\nThis guide cuts through the complexity to explain how each protocol works, compares MCP vs. A2A, and suggests when to deploy MCP or A2A.\n\n## What is MCP?\n\n[Model Context Protocol](https://modelcontextprotocol.io/introduction) solves the critical problem of equipping LLMs with tools and data sources. Before it existed, connecting AI to each tool required custom code. Want your AI to access Slack? Learn Slack\'s API. Need database access? Write an SQL integration. Every connection was a separate project.\n\nAnthropic‚Äôs MCP changes this by providing a **universal protocol**. When AI is connected to an MCP server through an MCP client, it can discover available tools, learn their capabilities, use these tools, and get results in an AI-friendly format. In short, **LLMs can connect to external tools and sources in a standardized and automatic way** that eliminates the need for custom integrations on the user‚Äôs end.\n\n### MCP flow example\n\nConsider this simplified flow of an AI agent that can extract web data using the [Oxylabs MCP server](https://github.com/oxylabs/oxylabs-mcp):\n\n**User‚Äôs prompt:** *"Is the Samsung Galaxy S25 Ultra sold on Amazon?"*. The AI agent recognizes it needs current Amazon search data.\n\n**Tool and capability discovery:** The agent uses Oxylabs MCP server and discovers four available scrapers: Universal, Google Search, Amazon Search, and Amazon Product. The AI chooses the Amazon Search scraper and sends a request with the query set to *"Samsung Galaxy S25 Ultra"*.\n\n**Request processing:** [Oxylabs Web Scraper API](https://oxylabs.io/products/scraper-api/web) processes the request, navigates Amazon, and returns relevant data through the MCP protocol.\n\n**Result analysis:** The agent receives clean data and answers the user‚Äôs question with fresh information from Amazon.\n\n### Key features of MCP\n\n**Extends AI capabilities:** AI can discover and easily use third-party tools, resources, and prompts.\n\n**Universal and vendor-neutral:** AI with an MCP client works out of the box with any tool or resource hosted on an MCP server.\n\n**Real-time data:** Connects AI to live sources instead of relying on training data.\n\n**Fast-growing ecosystem:** 150+ official MCP servers with integrations for Microsoft, GitHub, and Cloudflare, as well as 350+ community-driven servers.\n\n### MCP use cases\n\nFrom accessing internal knowledge bases to letting AI schedule meetings with clients, the adoption of MCP is broad. Some prominent use cases include:\n\n**Data extraction:** Letting any AI model get fresh information from websites (see our [Agents SDK setup](https://oxylabs.io/blog/openai-agents-sdk-integration) and [LangChain integration](https://oxylabs.io/blog/langchain-web-scraping)).\n\n**Development automation:** AI that can query your actual database schema before writing SQL queries.\n\n**Business workflows:** AI that books meetings, updates CRM, or sends emails to customers.\n\nWhile MCP makes AI agents smarter, there‚Äôs only so much a single agent can do. Complex workflows involve multiple agents, and this is where the A2A protocol comes into play.\n\n## What is A2A?\n\n[Agent2Agent](https://github.com/google-a2a/A2A), developed by Google, tackles a different challenge: **making any remote agent work together with other agents**. In the real world, complex problems require specialists. A lawyer doesn\'t perform surgery, and a surgeon doesn\'t argue court cases. They collaborate when needed.\n\nA2A brings this model to AI with an inter-agent communication protocol. Instead of one agent trying to do everything, you have specialized agents who excel at specific tasks. The protocol lets agents find each other and collaborate while keeping their internal workings private. The major benefit of the agent-to-agent protocol is that it lets agents interact regardless of the framework they‚Äôre built on.\n\n### A2A flow example\n\nLet‚Äôs visualize agent orchestration via A2A for performing an in-depth SEO analysis, which a single agent couldn‚Äôt handle alone with confidence:\n\n**User‚Äôs prompt:** *"Draft a comprehensive SEO analysis report using the top 5 ranking blog posts on Google that analyze the best RAG tools".*\n\n**Agent discovery:** The client agent formulates the requirements and uses the A2A server to perform agent discovery via "Agent Cards" that fit this task best. It finds *Website Scraper Agent* and *SEO Analysis Agent*.\n\n**1st agent execution:** The A2A server sends a request to the Website Scraper Agent. It picks the Google Search Scraper from its MCP server and extracts the top 5 ranking websites for the search query *"best RAG tools"*. Then, it scrapes all 5 blog posts using the Universal Scraper and returns their content.\n\n**2nd agent execution:** The A2A server sends scraped Google results and blog posts to the SEO Analysis Agent. It uses all the provided data and internal tools from its MCP server to analyze and draft a comprehensive SEO report with key insights.\n\n**Final result:** The A2A client gets the final SEO report from the A2A server and passes it back to the user.\n\n### Key features of A2A\n\n**Multi-agent collaboration:** Enables autonomous agents to work together on complex, long-running tasks while delegating tasks, sharing context, progress, and results throughout the process.\n\n**Discovery through Agent Cards:** Agents can discover each other\'s identity, skills, agent\'s capabilities, authentication requirements, and connection details.\n\n**Multimodal communication:** Agents can negotiate which data formats they support (text, files, media, structured data).\n\n**Security:** Uses modern web security standards while ensuring agents collaborate without exposing internal memory, proprietary logic, and tool implementations.\n\n### A2A use cases\n\nAs with MCP, the use cases of A2A are only limited by imagination. For instance, some specific A2A use cases include the following:\n\n**Deep researcher:** An agentic workflow that scrapes data from different search domains, checks source trustability, aggregates content, and writes comprehensive reports.\n\n**Infosec analyzer:** A single agent manages a multi-agent ecosystem that performs vulnerability research, penetration testing, and drafts security reports about a web application.\n\n**Travel planner:** An orchestration of different agents that find the best travel deals, plan the trip, and book flights, car rentals, train tickets, hotels, and activities.\n\n## A2A and MCP compared\n\n| Aspect | Model Context Protocol | Agent2Agent |\n| --- | --- | --- |\n| **Developer** | Anthropic | Google |\n| **Core purpose** | Connects AI to tools & data sources | Connects AI agents to each other |\n| **Problem solved** | Eliminates custom integrations for each tool and resource | Enables specialist agents to collaborate securely |\n| **Architecture** | AI ‚Üî Tools/Resources | AI Agent ‚Üî AI Agent |\n| **Focus** | Single agent interactions | Multi-agent orchestration |\n| **Discovery method** | Tool discovery via MCP servers | Agent discovery via "Agent Cards" on A2A servers |\n| **Key benefit** | Universal protocol that lets AI access data sources and tools | Framework-agnostic, context-rich, and multimodal agent collaboration |\n| **Technologies used** | JSON-RPC 2.0, Server Sent Events, HTTP/HTTPS, stdio, TLS | JSON-RPC 2.0, Server Sent Events, HTTP/HTTPS, Webhooks, TLS |\n| **Ecosystem** | 150+ official servers, 350+ community servers | Public or private servers hosting Agent Cards |\n| **Best for** | Individual tasks requiring external data/tools | Complex workflows needing multiple agents |\n| **Example use** | AI using an enterprise-grade scraper to gather Amazon data | Multiple agents that scan and test web application‚Äôs security |\n\n## Final thoughts\n\nMCP and A2A are complementary protocols building the foundation for practical AI systems. Together, they enable **AI architectures that mirror successful human teamwork**. For developers and organizations, the path is clear: implement MCP to enhance your AI with external capabilities, then adopt A2A as you scale to multi-agent systems.\n\nOxylabs has also introduced support for [MCP with Web Scraper API](https://oxylabs.io/blog/oxylabs-model-context-protocol). It enables developers to easily **integrate our scraping infrastructure with LLMs** and allows **AI tools to access fresh web data** without common blocks and geo-restrictions. Make sure to check out our other posts about AI and agent frameworks: [n8n vs. Flowise](https://oxylabs.io/blog/n8n-vs-flowise), [scraping with CrewAI](https://oxylabs.io/resources/integrations/crewai), [LlamaIndex integration](https://oxylabs.io/resources/integrations/llamaindex), and [proxy setup with Crawl4AI](https://oxylabs.io/resources/integrations/crawl4ai).\n\n## Frequently asked questions\n\n### What replaced MCP?\n\nNothing replaced MCP. The Model Context Protocol gained massive adoption recently when major companies like OpenAI, Microsoft, and others announced support. MCP continues to evolve with better security and features, establishing itself as the standard for AI connectivity with external tools and sources.\n\n### Does OpenAI support MCP?\n\nYes, OpenAI fully supports MCP as of March 2025. This includes integration in their Agents SDK and Responses API.\n\nAbout the author\n\n![vytenis kaubre avatar](/_next/image?url=https%3A%2F%2Fimages.prismic.io%2Foxylabs-web%2FZpArAB5LeNNTxDX4_4f38d4bd-d761-4feb-b525-27dd91f0c34e_DSC-4452.png%3Fauto%3Dformat%2Ccompress&w=1200&q=75)\n\nVytenis Kaubrƒó\n\nTechnical Content Researcher\n\nVytenis Kaubrƒó is a Technical Content Researcher at Oxylabs. Creative writing and a growing interest in technology fuel his daily work, where he researches and crafts technical content, all the while honing his skills in Python. Off duty, you may catch him working on personal projects, learning all things cybersecurity, or relaxing with a book.\n\nAll information on Oxylabs Blog is provided on an "as is" basis and for informational purposes only. We make no representation and disclaim all liability with respect to your use of any information contained on Oxylabs Blog or any third-party websites that may be linked therein. Before engaging in scraping activities of any kind you should consult your legal advisors and carefully read the particular website\'s terms of service or receive a scraping license.\n\n### Related content\n\n![](/_next/image?url=https%3A%2F%2Fimages.prismic.io%2Foxylabs-web%2FZ7chhZ7c43Q3gAyZ_BP-header-Web-Scraping-in-AI-model-training.png%3Fauto%3Dformat%2Ccompress&w=3840&q=75)\n\n##### The Essential Role of Web Scraping in AI Model Training\n\nDiscover how web scraping fuels AI model training by enabling access to diverse, high-quality datasets. Explore its role in workflows, specialized applications, and overcoming technical and ethical challenges.\n\n![roberta avatar](/_next/image?url=https%3A%2F%2Fimages.prismic.io%2Foxylabs-web%2FZpArSx5LeNNTxDYR_4720b1bf-4fde-455e-ad4d-caa68c2f9ba2_IMG_6929-modified.png%3Fauto%3Dformat%2Ccompress&w=1200&q=75)\n\nRoberta Aukstikalnyte\n\n2025-01-23\n\n![Building Web Scraping Architecture for AI Companies](/_next/image?url=https%3A%2F%2Fimages.prismic.io%2Foxylabs-web%2FZ36dD5bqstJ99LgJ_WPBuildingWebScrapingArchitectureforAICompanies%25E2%2580%2593BPheaderimg.png%3Fauto%3Dformat%2Ccompress&w=3840&q=75)\n\n##### Building Web Scraping Architecture for AI Companies\n\nThe process of building a workflow that allows you to collect large-scale web data for AI training.\n\n![author avatar](/_next/image?url=https%3A%2F%2Fimages.prismic.io%2Foxylabs-web%2FZpArXh5LeNNTxDYZ_1a4d6872-a09c-4e00-a558-96c9c17190aa_Augustas-Pelakauskas--1-.png%3Fauto%3Dformat%2Ccompress&w=1200&q=75)\n\nAugustas Pelakauskas\n\n2025-01-09\n\n![](/_next/image?url=https%3A%2F%2Fimages.prismic.io%2Foxylabs-web%2FZzyHf68jQArT1BuX_WPpaperonLLMfine-tuning%25E2%2580%2593BPheaderimg.png%3Fauto%3Dformat%2Ccompress&w=3840&q=75)\n\n##### Free White Paper: Acquiring High-Quality Web Data for LLM Fine-Tuning\n\nGet a free, in-depth guide on data acquisition processes for LLM fine-tuning. Discover data categories, large-scale scraping strategies, and cost optimization tips for fine-tuning your AI models.\n\n![roberta avatar](/_next/image?url=https%3A%2F%2Fimages.prismic.io%2Foxylabs-web%2FZpArSx5LeNNTxDYR_4720b1bf-4fde-455e-ad4d-caa68c2f9ba2_IMG_6929-modified.png%3Fauto%3Dformat%2Ccompress&w=1200&q=75)\n\nRoberta Aukstikalnyte\n\n2024-11-19\n\nTry Web Scraper API\n\nExtract **quality web data** hassle-free while avoiding CAPTCHAs and IP blocks.\n\n![](/_next/image?url=https%3A%2F%2Fimages.prismic.io%2Foxylabs-web%2FZpBibx5LeNNTxEd1_beee9016-1955-4678-999d-4e748cf06c89_ScrapingDigest_logo_dark.png%3Fauto%3Dformat%2Ccompress%26rect%3D0%2C0%2C440%2C72%26w%3D440%26h%3D72&w=1080&q=75)\n\nGet the latest news from data gathering world\n\nISO/IEC 27001:2017 certified products:\n\nProxy Solutions\n\nScraper APIs\n\nScale up your business with Oxylabs¬Æ\n\nCompany\n\nProxies\n\nAdvanced proxy solutions\n\nData Collection\n\nDatasets\n\nResources\n\nInnovation hub\n\nCorporate governance\n\n¬© 2025 oxylabs.io. All Rights Reserved\n\nIN THIS ARTICLE:\n\nTry Web Scraper API\n\nExtract **quality web data** hassle-free while avoiding CAPTCHAs and IP blocks.\n\n--------------------------------------------------------------------------------\n\n</Context>\n\n<Task>\nGenerate a list of sections for the report. Your plan should be tight and focused with NO overlapping sections or unnecessary filler. \n\nFor example, a good report structure might look like:\n1/ intro\n2/ overview of topic A\n3/ overview of topic B\n4/ comparison between A and B\n5/ conclusion\n\nEach section should have the fields:\n\n- Name - Name for this section of the report.\n- Description - Brief overview of the main topics covered in this section.\n- Research - Whether to perform web research for this section of the report. IMPORTANT: Main body sections (not intro/conclusion) MUST have Research=True. A report must have AT LEAST 2-3 sections with Research=True to be useful.\n- Content - The content of the section, which you will leave blank for now.\n\nIntegration guidelines:\n- Include examples and implementation details within main topic sections, not as separate sections\n- Ensure each section has a distinct purpose with no content overlap\n- Combine related concepts rather than separating them\n- CRITICAL: Every section MUST be directly relevant to the main topic\n- Avoid tangential or loosely related sections that don\'t directly address the core topic\n\nBefore submitting, review your structure to ensure it has no redundant sections and follows a logical flow.\n</Task>\n\n<Feedback>\nHere is feedback on the report structure from review (if any):\n\n</Feedback>\n\n<Format>\nCall the Sections tool \n</Format>\n